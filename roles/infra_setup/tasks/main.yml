---
# tasks file for infra_setup
# sync over files from ansible to mirror
- name: Ensure path is there for rhel7 extra
  file:
    path: "{{ hostvars[item]['rhel7-extra_dest'] }}"
    state: directory
    mode: '0755'
  when:
  - inventory_hostname == 'mirror.ocp.example.com'
  - "'mirror' in hostvars[item]['group_names']"
  loop: "{{ groups['all'] }}"

- name: Synchronization with bastion path and mirror path
  synchronize:
    src: "{{ hostvars[item]['rhel7-extra_src_path'] }}" 
    dest: "{{ hostvars[item]['rhel7-extra_dest'] }}"
    recursive: yes
  when:
  - inventory_hostname == 'mirror.ocp.example.com'
  - "'mirror' in hostvars[item]['group_names']"
  loop: "{{ groups['all'] }}"

- name: Ensure path is there for rhel7
  file:
    path: "{{ hostvars[item]['rhel7_dest'] }}"
    state: directory
    mode: '0755'
  when:
  - inventory_hostname == 'mirror.ocp.example.com'
  - "'mirror' in hostvars[item]['group_names']"
  loop: "{{ groups['all'] }}"

- name: Synchronization with bastion path and mirror path
  synchronize:
    src: "{{ hostvars[item]['rhel7_src_path'] }}"
    dest: "{{ hostvars[item]['rhel7_dest'] }}"
    recursive: yes
  when:
  - inventory_hostname == 'mirror.ocp.example.com'
  - "'mirror' in hostvars[item]['group_names']"
  loop: "{{ groups['all'] }}"

# delpoy jinja template for mirror
- name: upload jinja file to vm
  template:
    src: mirror_repo.j2
    dest: /etc/yum.repos.d/rhel.repo
    mode: '0644'
  when:
  - inventory_hostname == 'mirror.ocp.example.com'
  - "'mirror' in hostvars[item]['group_names']"
  loop: "{{ groups['all'] }}"

# restorecon /var/www/httpd
- name: restorecon http
  command: restorecon -vR /var/www/html
  when:
  - inventory_hostname == 'mirror.ocp.example.com'
  - "'mirror' in hostvars[item]['group_names']"
  loop: "{{ groups['all'] }}"


# install enable httpd
- name: Install apache
  yum:
    name: httpd
    state: latest
  when:
  - inventory_hostname == 'mirror.ocp.example.com'
  - "'mirror' in hostvars[item]['group_names']"
  loop: "{{ groups['all'] }}"


- name: Start httpd service
  service:
    name: httpd
    state: started
  when:
  - inventory_hostname == 'mirror.ocp.example.com'
  - "'mirror' in hostvars[item]['group_names']"
  loop: "{{ groups['all'] }}"


- name: Enable service httpd
  service:
    name: httpd
    enabled: yes
  when:
  - inventory_hostname == 'mirror.ocp.example.com'
  - "'mirror' in hostvars[item]['group_names']"
  loop: "{{ groups['all'] }}"


# open port 80 firewall and reset firewall
- name: Open firewall ports
  firewalld:
    port: 80/tcp
    permanent: yes
    state: enabled
    zone: public
  when:
  - inventory_hostname == 'mirror.ocp.example.com'
  - "'mirror' in hostvars[item]['group_names']"
  loop: "{{ groups['all'] }}"


- name: Reload firewall
  command: firewall-cmd --reload
  when:
  - inventory_hostname == 'mirror.ocp.example.com'
  - "'mirror' in hostvars[item]['group_names']"
  loop: "{{ groups['all'] }}"


# reload httpd
- name: restart apache
  service:
    name: httpd
    state: restarted
  when:
  - inventory_hostname == 'mirror.ocp.example.com'
  - "'mirror' in hostvars[item]['group_names']"
  loop: "{{ groups['all'] }}"

################################
#     For non mirror hosts     #                        
################################

# deploy jinja template to manage nodes for repo sync
- name: upload jinja file to vm
  template:
    src: manage_node_repo.j2
    dest: /etc/yum.repos.d/rhel.repo
    mode: '0644'
  when:
  - inventory_hostname != 'mirror.ocp.example.com'
  - "'mirror' in hostvars[item]['group_names']"
  loop: "{{ groups['all'] }}"

# yum repolist all to check if repo are up
- name: run yum repolist command
  command: yum repolist all
  register: yum
  when:
  - inventory_hostname != 'mirror.ocp.example.com'
  - "'mirror' in hostvars[item]['group_names']"
  loop: "{{ groups['all'] }}"

- name: show msg
  debug:
    msg: "{{ yum }}"
  when:
  - inventory_hostname != 'mirror.ocp.example.com'
  - "'mirror' in hostvars[item]['group_names']"
  loop: "{{ groups['all'] }}"

# Ensure pip is installed
- name: Install pip
  yum:
    name: python3-pip-9.0.3-5.el7.noarch
    state: present

# Ensure path to install python package is there and rsync over file
- name: Ensure path is there for python package
  file:
    path: "{{ hostvars[item]['python_pack_dest'] }}"
    state: directory
    mode: '0755'
  when:
  - inventory_hostname != 'mirror.ocp.example.com'
  - "'mirror' in hostvars[item]['group_names']"
  loop: "{{ groups['all'] }}"

- name: Synchronization with bastion path and mirror path
  synchronize:
    src: "{{ hostvars[item]['python_pack_path'] }}"
    dest: "{{ hostvars[item]['python_pack_dest'] }}"
    recursive: yes
  when:
  - inventory_hostname != 'mirror.ocp.example.com'
  - "'mirror' in hostvars[item]['group_names']"
  loop: "{{ groups['all'] }}"

# Run bash script to install pyvmomi
 - name: Run Bash Script install pyvmomi
   script: /home/pip_packages/run.sh
   register: status
   when:
   - inventory_hostname != 'mirror.ocp.example.com'
   - "'mirror' in hostvars[item]['group_names']"
   loop: "{{ groups['all'] }}"

- name: Showing status
  debug:
    var: status
  when:
  - inventory_hostname != 'mirror.ocp.example.com'
  - "'mirror' in hostvars[item]['group_names']"
  loop: "{{ groups['all'] }}"


